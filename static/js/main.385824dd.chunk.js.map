{"version":3,"sources":["components/Circles/Circles.jsx","components/CircleSelector/CircleSelector.jsx","App.js","reportWebVitals.js","index.js"],"names":["Circles","props","className","circleSelected","CircleSelector","onClick","handleSelectCircle","App","e","setState","value","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAkBeA,MAbf,SAAiBC,GAGb,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAoC,MAAzBD,EAAME,eAAyB,WAAY,GAA3D,eACA,qBAAKD,UAAoC,MAAzBD,EAAME,eAAyB,WAAY,GAA3D,eACA,qBAAKD,UAAoC,MAAzBD,EAAME,eAAyB,WAAY,GAA3D,eACA,qBAAKD,UAAoC,MAAzBD,EAAME,eAAyB,WAAY,GAA3D,mBCIGC,G,MAbQ,SAACH,GAEpB,OACI,sBAAKC,UAAU,iBAAf,UACA,wBAAQA,UAAoC,MAAzBD,EAAME,eAAyB,WAAY,GAAKE,QAAS,WAAOJ,EAAMK,mBAAmB,MAA5G,SAA8I,MAAzBL,EAAME,eAAyB,oBAAsB,oBAC1K,wBAAQD,UAAoC,MAAzBD,EAAME,eAAyB,WAAY,GAAKE,QAAS,WAAOJ,EAAMK,mBAAmB,MAA5G,SAA6I,MAAxBL,EAAME,eAAwB,oBAAsB,oBACzK,wBAAQD,UAAoC,MAAzBD,EAAME,eAAyB,WAAY,GAAKE,QAAS,WAAOJ,EAAMK,mBAAmB,MAA5G,SAA8I,MAAzBL,EAAME,eAAyB,oBAAsB,oBAC1K,wBAAQD,UAAoC,MAAzBD,EAAME,eAAyB,WAAY,GAAKE,QAAS,WAAOJ,EAAMK,mBAAmB,MAA5G,SAA8I,MAAzBL,EAAME,eAAyB,oBAAsB,yBCyBnKI,E,kDA9Bb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IAORK,mBAAqB,SAACE,GACpB,EAAKC,SAAS,CAACC,MAAOF,KAPpB,EAAKG,MAAQ,CACbD,MAAO,KAHQ,E,0CAYnB,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,qCACA,iCACE,cAAC,EAAD,CACEI,mBAAoBM,KAAKN,mBACzBH,eAAgBS,KAAKD,MAAMD,QAE7B,cAAC,EAAD,CACEP,eAAgBS,KAAKD,MAAMD,kB,GAvBrBG,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.385824dd.chunk.js","sourcesContent":["import React from 'react'\nimport './Circles.css'\n\n\n\nfunction Circles(props) {\n    \n    \n    return (\n        <div className=\"Circles\"> \n            <div className={props.circleSelected === '1' ? 'selected': ''}>1</div>\n            <div className={props.circleSelected === '2' ? 'selected': ''}>2</div>\n            <div className={props.circleSelected === '3' ? 'selected': ''}>3</div>\n            <div className={props.circleSelected === '4' ? 'selected': ''}>4</div>\n        </div>\n    )\n}\n\nexport default Circles\n","import React, { useState }  from 'react';\nimport \"./CircleSelector.css\";\n\n\nconst CircleSelector = (props) => {\n\n    return (\n        <div className=\"CircleSelector\"> \n        <button className={props.circleSelected === '1' ? 'selected': '' } onClick={() => {props.handleSelectCircle('1')}} >{props.circleSelected === '1' ? 'Circle 1 Selected' : 'SELECT CIRCLE 1' }</button>\n        <button className={props.circleSelected === '2' ? 'selected': '' } onClick={() => {props.handleSelectCircle('2')}} >{props.circleSelected=== '2' ? 'Circle 2 Selected' : 'SELECT CIRCLE 2' }</button>\n        <button className={props.circleSelected === '3' ? 'selected': '' } onClick={() => {props.handleSelectCircle('3')}} >{props.circleSelected === '3' ? 'Circle 3 Selected' : 'SELECT CIRCLE 3' }</button>\n        <button className={props.circleSelected === '4' ? 'selected': '' } onClick={() => {props.handleSelectCircle('4')}} >{props.circleSelected === '4' ? 'Circle 4 Selected' : 'SELECT CIRCLE 4' }</button>\n    \n        </div>\n    );\n}\n\nexport default CircleSelector;","import React, { Component } from 'react';\nimport './App.css';\nimport Circles from './components/Circles/Circles';\nimport CircleSelector from './components/CircleSelector/CircleSelector';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n      this.state = {\n      value: '1'\n    }\n    \n  }\n\n  handleSelectCircle = (e) => {\n    this.setState({value: e})\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">UNIT 4 FINAL ASSESSMENT</header>\n        <main>\n          <CircleSelector\n            handleSelectCircle={this.handleSelectCircle}\n            circleSelected={this.state.value}\n          />\n          <Circles\n            circleSelected={this.state.value}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}